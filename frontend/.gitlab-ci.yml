cache:
  paths:
    - frontend/dist/frontend

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
  - build
  - test
  - notify
  - release
  - deploy

build-frontend-code-job:
  stage: build  
  script:        
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend
  only:
     changes:
     - frontend/**/*

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli
  needs:
    - job: build-frontend-code-job
  script: |
    cd frontend/
    sonar-scanner \
    -Dsonar.projectKey=$SONAR_PROJECT_KEY_FRONT \
    -Dsonar.host.url=$SONARQUBE_URL \
    -Dsonar.login=$SONAR_LOGIN_FRONTEND

telegram-notification-frontend:
  stage: notify
  needs:
    - job: sonarqube-frontend-sast
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /send notification/
  script: |
      curl -X POST -H "Content-type: application/json" \
      --data "{\"chat_id\": \"-1002056379103\", \"text\": \"Павел Науменко собрал и протестировал frontend by sonarqube. URL: $CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_SHA/download?job=build-frontend-code-job\"}" \
      https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage

upload-frontend-release:
  stage: release
  only:
    changes:
    - frontend/**/*
  needs:
    - build-frontend-code-job
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - >
      curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}"
      --upload-file sausage-store-${VERSION}.tar.gz
      ${NEXUS_REPO_URL}/${NEXUS_REPO_FRONTEND_NAME}/${VERSION}/sausage-store-${VERSION}.tar.gz 

deploy:
  stage: deploy
  needs:
    - job: upload-frontend-release
  before_script:
    #устанавливаем ssh-agent для удобства аутентификации по ssh
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    #сохраняем сгенеренный ранее приватный ключ для раннера.
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - SSH_KNOWN_HOSTS=$(ssh-keyscan ${DEV_HOST})
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp ./frontend/nginx.conf ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store.conf
    - >
      ssh ${DEV_USER}@${DEV_HOST}
      "export "CURRENT_VERSION=${VERSION}";
      export "VERSION=${VERSION}";
      export "DEV_HOST=${DEV_HOST}";
      export "NEXUS_REPO_URL=${NEXUS_REPO_URL}";
      export "NEXUS_REPO_FRONTEND_NAME=${NEXUS_REPO_FRONTEND_NAME}";
      export "NEXUS_REPO_USER=${NEXUS_REPO_USER}";
      export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";
      setsid /bin/bash -s " < ./frontend/deploy.sh
  environment:
    name: review_frontend/$CI_COMMIT_REF_NAME
    url: http://${DEV_HOST}:80
    auto_stop_in: 1 day
  rules:
    - when: manual




