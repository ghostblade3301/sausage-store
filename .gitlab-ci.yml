stages:
  - module-pipelines
  - deploy

frontend:
  stage: module-pipelines
  trigger:
    include: "frontend/.gitlab-ci.yml"
    strategy: depend

backend:
  stage: module-pipelines
  trigger:
    include: "backend/.gitlab-ci.yml"
    strategy: depend 

deploy:
  stage: deploy
  needs:
    - backend
    - frontend
  before_script:
    #устанавливаем ssh-agent для удобства аутентификации по ssh
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    #сохраняем сгенеренный ранее приватный ключ для раннера
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - SSH_KNOWN_HOSTS=$(ssh-keyscan ${DEV_HOST})
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - |
      cat > infra/.env << EOT
      VERSION="${VERSION}"
      SPRING_DATASOURCE_URL="${SPRING_DATASOURCE_URL}"
      SPRING_DATASOURCE_USERNAME="${SPRING_DATASOURCE_USERNAME}"
      SPRING_DATASOURCE_PASSWORD="${SPRING_DATASOURCE_PASSWORD}"
      SPRING_DATA_MONGODB_URI="${SPRING_DATA_MONGODB_URI}"
      MONGO_USER="${MONGO_USER}"
      MONGO_PASSWORD="${MONGO_PASSWORD}"
      MONGO_HOST="${MONGO_HOST}"
      MONGO_DATABASE="${MONGO_DATABASE}"
      NEXUS_REPO_USER="${NEXUS_REPO_USER}"
      NEXUS_REPO_URL="${NEXUS_REPO_URL}"
      NEXUS_REPO_PASS="${NEXUS_REPO_PASS}"
      KEYSTORE_PASSWORD="${KEYSTORE_PASSWORD}"
      LOG_PATH=/var/log/sausage-store/sausage-store-backend.log
      REPORT_PATH=/var/log/sausage-store/report.log
      EOT
    - ssh ${DEV_USER}@${DEV_HOST} 'rm -f .env'
    - scp ./infra/docker-compose-production.yml ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/docker-compose-production.yml
    - scp ./infra/nginx_local.conf ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/nginx_local.conf
    - scp ./infra/.env ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/.env
    - ssh ${DEV_USER}@${DEV_HOST} 'docker compose -f docker-compose-production.yml down || true'
    - ssh ${DEV_USER}@${DEV_HOST} 'docker compose -f docker-compose-production.yml up --build -d'
